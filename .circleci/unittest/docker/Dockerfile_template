FROM BASE_IMAGE as kaldi
# Use the same base image as pytorch/manylinux-cuda100
# https://github.com/pytorch/builder/blob/master/manywheel/Dockerfile

RUN yum install -y \
        atlas-devel \
        autoconf \
        automake \
        bzip2 \
        gcc-c++ \
        gcc-gfortran \
        git \
        libtool \
        make \
        patch \
        python3 \
        sox \
        subversion \
        unzip \
        wget \
        which \
        zlib-devel && \
        yum clean all && \
        rm -rf /var/cache/yum


# Kaldi uses MKL as a default math library, but we are going to copy featbin binaries and dependent
# shared libraries to the final image, so we use ATLAS, which is easy to reinstall in the final image.
RUN git clone --depth 1 https://github.com/kaldi-asr/kaldi.git /opt/kaldi && \
        cd /opt/kaldi/tools && \
        make -j $(nproc) && \
        cd /opt/kaldi/src && \
        ./configure --shared --mathlib=ATLAS --use-cuda=no && \
        make featbin -j $(nproc)

# Copy featbins and dependent libraries
WORKDIR /kaldi
ADD ./scripts /scripts
RUN bash /scripts/copy_kaldi_executables.sh /opt/kaldi /kaldi
RUN bash /scripts/build_third_parties.sh /src

FROM BASE_IMAGE
RUN yum install -y \
        atlas \
        libstdc++ \
        libgfortran && \
        yum clean all && \
        rm -rf /var/cache/yum
COPY --from=kaldi /kaldi /kaldi
ENV PATH="${PATH}:/kaldi/bin" LD_LIBRARY_PATH="${LD_LIBRARY_PATH}:/kaldi/lib"
COPY --from=kaldi /src/third_party /third_party
