package:
  name: torchaudio
  version: "{{ environ.get('BUILD_VERSION', '0.0.0') }}"

source:
  path: "{{ environ.get('SOURCE_ROOT_DIR', '../..') }}"

requirements:
  build:
    - {{ compiler('c') }} # [win]
    - {{ compiler('cxx') }} # [win]

  host:
    - python
    - setuptools
    - cmake
    - ninja
    - defaults::numpy >=1.11
    {{ environ.get('CONDA_PYTORCH_BUILD_CONSTRAINT', 'pytorch') }}
    {{ environ.get('CONDA_EXTRA_BUILD_CONSTRAINT', '') }}
    {{ environ.get('CONDA_CPUONLY_FEATURE', '') }}
    {{ environ.get('CONDA_CUDATOOLKIT_CONSTRAINT', '') }}

  run:
    - python
    - defaults::numpy >=1.11
    {{ environ.get('CONDA_PYTORCH_CONSTRAINT', 'pytorch') }}
    {{ environ.get('CONDA_CUDATOOLKIT_CONSTRAINT', '') }}

build:
  string: py{{py}}_{{ environ.get('CU_VERSION', 'cpu') }}
  script_env:
    - BUILD_VERSION
    - USE_CUDA
    - TORCH_CUDA_ARCH_LIST
  features:
    {{ environ.get('CONDA_CPUONLY_FEATURE', '') }}

test:
  imports:
    - torchaudio
    - torchaudio.datasets
    - torchaudio.kaldi_io
    - torchaudio.sox_effects
    - torchaudio.transforms

  source_files:
    - test

  requires:
    - pytest
    # Ideally we would test this, but conda doesn't provide librosa
    # - librosa >=0.4.3
    - scipy
    {{ environ.get('CONDA_CPUONLY_FEATURE', '') }}

about:
  home: https://github.com/pytorch/audio
  license: BSD
  license_file: LICENSE
  summary: 'simple audio I/O for pytorch'
